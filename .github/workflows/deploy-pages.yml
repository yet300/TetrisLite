name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build-and-deploy:
    name: Build and Deploy Web App
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build React + Kotlin/JS Web App
        run: ./gradlew :webApp:jsBrowserDistribution --no-daemon

      - name: Prepare for GitHub Pages
        run: |
          cd webApp/build/dist/js/productionExecutable
          # Create .nojekyll to prevent GitHub Pages from ignoring files
          touch .nojekyll
          # Copy CNAME if it exists
          if [ -f ../../../../CNAME ]; then
            cp ../../../../CNAME .
            echo "CNAME file copied"
          fi
          # List all files to verify
          echo "Files being deployed:"
          ls -la

      - name: Show content of deployment directory
        run: |
          echo "--- Recursive listing of productionExecutable directory ---"
          ls -R webApp/build/dist/js/productionExecutable
          echo "---------------------------------------------------------"

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./webApp/build/dist/js/productionExecutable

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Output deployment URL
        run: |
          echo "ðŸš€ Deployed to: ${{ steps.deployment.outputs.page_url }}"
          echo "âœ… Deployment successful!"
